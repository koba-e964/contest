14:00 開始
14:53 ばか、A やっと通った 順位表は E (62) -> K (33) -> I (22) の順にやれと言っている
14:58 E 2 個か 3 個が最善な気がする
15:05 Rust の癖でつい if の後の括弧を省略する
15:12 E 提出、正解 順位表は K (63) -> I (39) -> F (22) の順にやれと言っている
15:23 K SCC の個数 = 1 が必要
15:27 K 投げて通った 順位表は I (52) -> F (33) -> B (24) の順にやれと言っている
15:39 F 上界 3 がある (大きさ 4 の clique を作りたい、deg >= 3 な頂点があればそこからできる、そうでない場合はパスかサイクルであり、長さ 3 の部分パスグラフをとればやはり 3)
 大きさ 4 の部分サイクルグラフを含めば答えは 2 だが、これは color coding でできるはず (https://www.slideshare.net/wata_orz/ss-12131479)
16:08 color coding での cycle 検出が面倒なことに気づき O(n^2) を実装、投げて通った
16:11 順位表は I (68) -> B (38) -> J (24) の順にやれと言っている
16:17 cycle 検出あたりの計算量を丁寧に把握したい 2^O(k) n^O(1) とだけ言われても困るだろ
16:32 J beauty は p != id なら n または n-1 なのでは？一箇所くらい取り除いて inversion が奇数個減るところがありそう
 -> そうでもない 5 4 3 2 1 のときダメ なので n, n-1, n-2 のどれか?
 n かどうか (p が odd かどうか) は奇置換かどうかなので O(1) で計算可能。
17:13 I よく見たら 1 <= a[i][j] <= n + m なのでマージンは 1 しかない
17:34 I 投げて通った 順位表は B (58) -> J (42) -> C (29) の順にやれと言っている
19:00 B 一生規則がわからない
